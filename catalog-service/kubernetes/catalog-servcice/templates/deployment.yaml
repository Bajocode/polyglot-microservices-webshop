apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "catalog-servcice.fullname" . }}
  labels:
    {{- include "catalog-servcice.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "catalog-servcice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "catalog-servcice.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "catalog-servcice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: {{ .Values.server.livenessPath }}
              port: http
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: {{ .Values.server.readinessPath }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: {{ .Values.server.springProfile }}
          - name: SERVER_HOST
            value: {{ .Values.server.host }}
          - name: SERVER_PORT
            value: "{{ .Values.server.port }}"
          - name: LOGGER_LEVEL
            value: {{ .Values.server.loggerLevel }}
          - name: POSTGRESQL_MASTER_HOST
            value: "{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}"
          - name: POSTGRESQL_MASTER_PORT
            value: "{{ .Values.server.postgresql.port }}"
          - name: POSTGRESQL_USERNAME
            value: {{ .Values.server.postgresql.user }}
          - name: POSTGRESQL_PASSWORD
            value: {{ .Values.server.postgresql.pw }}
          - name: POSTGRESQL_DATABASE
            value: {{ .Values.server.postgresql.db }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
