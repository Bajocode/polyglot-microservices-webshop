import { Spec, ValidatorSpec } from './types';
export declare const makeValidator: <T>(parseFn: (input: string) => T) => (spec?: Spec<T> | undefined) => ValidatorSpec<T>;
export declare function bool<T extends boolean = boolean>(spec?: Spec<T>): ValidatorSpec<boolean>;
export declare function num<T extends number = number>(spec?: Spec<T>): ValidatorSpec<number>;
export declare function str<T extends string = string>(spec?: Spec<T>): ValidatorSpec<string>;
export declare function email<T extends string = string>(spec?: Spec<T>): ValidatorSpec<string>;
export declare function host<T extends string = string>(spec?: Spec<T>): ValidatorSpec<string>;
export declare function port<T extends number = number>(spec?: Spec<T>): ValidatorSpec<number>;
export declare function url<T extends string = string>(spec?: Spec<T>): ValidatorSpec<string>;
export declare function json<T = any>(spec?: Spec<T>): ValidatorSpec<T>;
